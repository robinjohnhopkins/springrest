apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 7cd1c03b-4c77-11ea-b029-0ef0e3c74fbe
      openshift.io/token-secret.name: builder-token-2cfl9
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ3aWxkZmx5LWRlbW8iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiYnVpbGRlci10b2tlbi0yY2ZsOSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJidWlsZGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiN2NkMWMwM2ItNGM3Ny0xMWVhLWIwMjktMGVmMGUzYzc0ZmJlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OndpbGRmbHktZGVtbzpidWlsZGVyIn0.dNW4xNa22ZsnPYiH9SkEJ0VGtHd6AWKRPnNS9fj9le-KRbbnMEyZkdo4GUTwNsOrICaD34oBUmV9yiqggk9j3vD9P_AAwQATbrF7dkcVgEzkjxAOalqFEkL5N6NcJSgf9J4XtHhGxe484MXjAX-KJFVKdClC3I4m4Svvh_CZDqgoLPAOxU8_i7pCTymycv5biq80rDAkug6K3O5LWmgP8h2lRZe9lYTZtaPDyfkAcnDhroQrwTbPB6r_UCDBr5oNSOh-VqiVZNUHRyDa9ap3QJP_0rf9tnwgsTm6QtxWzUIjxi9z4rfLhAbDWxcpMf15yMz8FXyJ8eaTgEow0HhvsQ
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: builder-dockercfg-np9j2
    namespace: wildfly-demo
    resourceVersion: "76328"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/builder-dockercfg-np9j2
    uid: 7ce69158-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMHlZMlpzT1NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTjJOa01XTXdNMkl0TkdNM055MHhNV1ZoTFdJd01qa3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uZHBiR1JtYkhrdFpHVnRienBpZFdsc1pHVnlJbjAuZE5XNHhOYTIyWnNuUFlpSDlTa0VKMFZHdEhkNkFXS1JQbk5TOWZqOWxlLUtSYmJuTUV5WmtkbzRHVVR3TnNPcklDYUQzNG9CVW1WOXlpcWdnazlqM3ZEOVBfQUF3UUFUYnJGN2RrY1ZnRXpranhBT2FscUZFa0w1TjZOY0pTZ2Y5SjRYdEhoR3hlNDg0TVhqQVgtS0pGVktkQ2xDM0k0bTRTdnZoX0NaRHFnb0xQQU94VThfaTdwQ1R5bXljdjViaXE4MHJEQWt1ZzZLM081TFdtZ1A4aDJsUlplOWxZVFp0YVBEeWZrQWNuRGhyb1Fyd1RiUEI2cl9VQ0RCcjVvTlNPaC1WcWlWWk5VSFJ5RGE5YXAzUUpQXzByZjl0bndnc1RtNlF0eFd6VUlqeGk5ejRyZkxoQWJEV3hjcE1mMTV5TXo4Rlh5SjhlYVRnRW93MEhodnNR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 7cd1c03b-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: builder-token-2cfl9
    namespace: wildfly-demo
    resourceVersion: "76323"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/builder-token-2cfl9
    uid: 7cd74fa5-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMXhjRzVuTWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTjJOa01XTXdNMkl0TkdNM055MHhNV1ZoTFdJd01qa3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uZHBiR1JtYkhrdFpHVnRienBpZFdsc1pHVnlJbjAuUnRLUHNfZ3NrT3JZQ1lSVV9YbjVNXy11SzFLYWo4RzJiT2VZdlJ6ckhHdlNsWG05Y2FYUFg5T2poZ0JLMER3Q1RSa2V2Q3MwZVVwSkU0dEtHQXNOWHBUMndHbTUxSmU0dnBTQXMzTloyN014SlJCVTNWYURUS1NvcnlXYTVLYUJxNnUyOW9EOHpEVTNocGhsNkluUzdpaHdBRUlET3VEUFNVcFRGRG0xZ0pITV9Ia25na29uZHFzYjQyMGhoLU9oX1dSWXBfT0hpTXFkTEk4bUpZSkxWaWZJcFZiNWp3U0dpczVCMkJidDFjOHVJQkpoaldwTjJMcEN0d3pVdVFWdVJRd19kaWJxWjY1eTZ4WHZqeFlSd0ZudXhCQnhDMXNkQUhNREJiMldEZkc3ZVNpTWtGWlBpMU9HWUV2OWxSREZmYTRIU0h4eFdYdC1LWTBBS2Yyblln
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 7cd1c03b-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: builder-token-qpng2
    namespace: wildfly-demo
    resourceVersion: "76320"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/builder-token-qpng2
    uid: 7cdcd341-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 7cce9092-4c77-11ea-b029-0ef0e3c74fbe
      openshift.io/token-secret.name: default-token-n9p8j
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ3aWxkZmx5LWRlbW8iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi1uOXA4aiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiN2NjZTkwOTItNGM3Ny0xMWVhLWIwMjktMGVmMGUzYzc0ZmJlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OndpbGRmbHktZGVtbzpkZWZhdWx0In0.Ks224Qc4Qo5VKV0S35nI5DGe_CLXrPq5Lp2mvw2B7aZ_tMy8aXcVGeZlVI2iNKhKHsH4x6WRtacbNwxFxLDITS1jcCjeHvz1kMm-1Pa7sSUV-hQUwlPJeoW4JncW3zq3_tbc-18xp0BGtRZd15W8I5u-gATkoe6NLjQ5LCb0TjV0UpEPWWXshDxa6AstAvGUJnOlekVLW1rTzBS-IzIZVx_5mqw8W5KvMYCP7j_APgO_Q3M5VcD_Ju6Ft2E4XL0G2fGCk4Zgg0GD6D-iOMaRd6pB8blpodzkrKgO5VZjZEqALWozbDraSZhjeHnqnbCs7OaUA2JcATEerez0mNcxfQ
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: default-dockercfg-5bzvr
    namespace: wildfly-demo
    resourceVersion: "76331"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/default-dockercfg-5bzvr
    uid: 7cec3f9c-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMXVPWEE0YWlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTjJOalpUa3dPVEl0TkdNM055MHhNV1ZoTFdJd01qa3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uZHBiR1JtYkhrdFpHVnRienBrWldaaGRXeDBJbjAuS3MyMjRRYzRRbzVWS1YwUzM1bkk1REdlX0NMWHJQcTVMcDJtdncyQjdhWl90TXk4YVhjVkdlWmxWSTJpTktoS0hzSDR4NldSdGFjYk53eEZ4TERJVFMxamNDamVIdnoxa01tLTFQYTdzU1VWLWhRVXdsUEplb1c0Sm5jVzN6cTNfdGJjLTE4eHAwQkd0UlpkMTVXOEk1dS1nQVRrb2U2TkxqUTVMQ2IwVGpWMFVwRVBXV1hzaER4YTZBc3RBdkdVSm5PbGVrVkxXMXJUekJTLUl6SVpWeF81bXF3OFc1S3ZNWUNQN2pfQVBnT19RM001VmNEX0p1NkZ0MkU0WEwwRzJmR0NrNFpnZzBHRDZELWlPTWFSZDZwQjhibHBvZHprcktnTzVWWmpaRXFBTFdvemJEcmFTWmhqZUhucW5iQ3M3T2FVQTJKY0FURWVyZXowbU5jeGZR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 7cce9092-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: default-token-n9p8j
    namespace: wildfly-demo
    resourceVersion: "76325"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/default-token-n9p8j
    uid: 7cd780ca-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMXhiRFY0T0NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTjJOalpUa3dPVEl0TkdNM055MHhNV1ZoTFdJd01qa3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9uZHBiR1JtYkhrdFpHVnRienBrWldaaGRXeDBJbjAuaW05U2xGazI4alZPX09jX0MxT1hobC1nOHJqOU9mMXBRR1pGMU9nUE01TVBPTkZrWTZUVDZuYzNWWVpHcmplUlJrdUFDbFlpRTNjN0EzbWFUS1pxcmJhaHl2YkRzT1V2YkVIcUc1ODZ5Z0l3aVZsRjZvVUpiUFczZkxOcFBQUHRwRWoxSkFuSTFJZ3pGdU5nV3dmWEVmMnhndjZIb19lSVV1ZnhhTF9Kd0dmS2RCemRpX0ZFclRCazg0alRkYVBCQ0p2bmpBX2F1QVNVN2pwb29rU0NWQzh1SHVQZ3gycHRwZUpabmlJU0RJcDFjT1VURzluNVQwWWhlX0JySXJ4UnNBbW5uVC1PVC1GT0pXcGp6S0JtYjlwdk1vbUVQQ2ZrdXl0cnVYdVpvVDZwLVBodnZZemxfRk1QZC1pNEJNZElZeHZLempZU2U0QW9TQnBLVUNxc2dn
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 7cce9092-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: default-token-ql5x8
    namespace: wildfly-demo
    resourceVersion: "76319"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/default-token-ql5x8
    uid: 7cde9f88-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 7cd5292a-4c77-11ea-b029-0ef0e3c74fbe
      openshift.io/token-secret.name: deployer-token-d7d2j
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ3aWxkZmx5LWRlbW8iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tZDdkMmoiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI3Y2Q1MjkyYS00Yzc3LTExZWEtYjAyOS0wZWYwZTNjNzRmYmUiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6d2lsZGZseS1kZW1vOmRlcGxveWVyIn0.X1qWarHh18GIzuHaUNPKg05-N20zVw7IdQmp4Px1e-C-xvKKE2PW9ac5N6bLMrwe8FWdAm2elqAJ5aShZzRVeDMX8TuRoQ9IUOUSRuwUWV1iZVwLKY8FCRHR13mQCglAW3wYUs4BeHbFMVXYy1O06OIMLHBbLfF05wpOg3IZK4ma5GJn62N7F59fLJ5MhBm98hlMSOPNp7-P8ix_ISu5FE5kLejBo6uNeQGZC_avwJ8qhIkPJWgced2AKruQ5jekBYcPOQ-6vb1KqiCApm8u8TDVKmLDy1de6R5-txqMxOSOqc8md3LHIzJ5h-x4HhiGb9wDX4JOtcIftHBBkksRrQ
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: deployer-dockercfg-prfbk
    namespace: wildfly-demo
    resourceVersion: "76336"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/deployer-dockercfg-prfbk
    uid: 7cf33889-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRaRGRrTW1vaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJM1kyUTFNamt5WVMwMFl6YzNMVEV4WldFdFlqQXlPUzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZkMmxzWkdac2VTMWtaVzF2T21SbGNHeHZlV1Z5SW4wLlgxcVdhckhoMThHSXp1SGFVTlBLZzA1LU4yMHpWdzdJZFFtcDRQeDFlLUMteHZLS0UyUFc5YWM1TjZiTE1yd2U4RldkQW0yZWxxQUo1YVNoWnpSVmVETVg4VHVSb1E5SVVPVVNSdXdVV1YxaVpWd0xLWThGQ1JIUjEzbVFDZ2xBVzN3WVVzNEJlSGJGTVZYWXkxTzA2T0lNTEhCYkxmRjA1d3BPZzNJWks0bWE1R0puNjJON0Y1OWZMSjVNaEJtOThobE1TT1BOcDctUDhpeF9JU3U1RkU1a0xlakJvNnVOZVFHWkNfYXZ3SjhxaElrUEpXZ2NlZDJBS3J1UTVqZWtCWWNQT1EtNnZiMUtxaUNBcG04dThURFZLbUxEeTFkZTZSNS10eHFNeE9TT3FjOG1kM0xISXpKNWgteDRIaGlHYjl3RFg0Sk90Y0lmdEhCQmtrc1JyUQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 7cd5292a-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: deployer-token-d7d2j
    namespace: wildfly-demo
    resourceVersion: "76330"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/deployer-token-d7d2j
    uid: 7ce28bdf-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: d2lsZGZseS1kZW1v
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSjNhV3hrWm14NUxXUmxiVzhpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRjSGh5TlhZaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJM1kyUTFNamt5WVMwMFl6YzNMVEV4WldFdFlqQXlPUzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZkMmxzWkdac2VTMWtaVzF2T21SbGNHeHZlV1Z5SW4wLlJfamotNC1BRHVCZlJyTDNmamJnNGtWUjM0Z2YwcGxXaDBJMWx4V0F4ajVCM3dyNVZFbExIbjgxUDdudEJMTWtlYW9jODZNNi1EMml2Sk9EU0JGN3hPS0h4YmhidkNiaWU1bjMzWF9VamFJWEg5MUtxTnAtaGJGMUxaUEhJZUdzY0FjOWpWeTlMUjM3eXRhc210cXlKNnZZcFlkcWRsR0JmbVdGUW1Jbi1vNER1X00teGRfZUdpdXdOMVdIMWRoalJqUHBVS0lXSS1HNmFobDJHY3h6MU16YW9VbTRoRmN1SGpsNUVFM0p4NC1Fa3dXOEVkWk1CWVJRTHJwWDU3bDZDWmZNV1BJS2VuQm0tTW42WU5DN3VXajE5bko2RTljc1JVcU1VZ0VFeUtTemlVTUpUYUs0SXlhbXRWcTNmdlVBakV4N1BTQWNYbEY0anhvVlJyLXRXUQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 7cd5292a-4c77-11ea-b029-0ef0e3c74fbe
    creationTimestamp: "2020-02-11T02:37:46Z"
    name: deployer-token-pxr5v
    namespace: wildfly-demo
    resourceVersion: "76321"
    selfLink: /api/v1/namespaces/wildfly-demo/secrets/deployer-token-pxr5v
    uid: 7cdf26f1-4c77-11ea-b029-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
