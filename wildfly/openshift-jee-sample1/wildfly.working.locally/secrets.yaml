apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 2dda66ec-4aa9-11ea-bba8-0ef0e3c74fbe
      openshift.io/token-secret.name: builder-token-64995
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYWEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiYnVpbGRlci10b2tlbi02NDk5NSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJidWlsZGVyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMmRkYTY2ZWMtNGFhOS0xMWVhLWJiYTgtMGVmMGUzYzc0ZmJlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhYTpidWlsZGVyIn0.PAbJrVpFsXmoPGEr4bMD4vGMLd_Ff_pvSfTNypUvkNy6-aqVsf4VvOAZ4oeugIuJV82p7USFnvW0_d_5Hh5hfet6OBFzDPpSXUBSC7tLJSgBRBE1GCr0N73d5T7JV0z4o4gns8LVzMnyUF_jqW1_SLb6HelOJHvwWIGJoKV1etz_oCe8HsZm8FGEyN8YxniH_aCsB5g64Ps9Pn2E5HdsriT80emFlqYWuKYp64wV1JLQdZmPxChPoVUztntSuPv-qYq_kQ1YLnL20z00EEqUDYlFV5PKbLT0tbEFKOrK3Lndx-_FOeTV0tDJm2Xf6SlHrB0wJyRRvYrUuCTZ05lO2Q
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: builder-dockercfg-xc9c2
    namespace: aaa
    resourceVersion: "40208"
    selfLink: /api/v1/namespaces/aaa/secrets/builder-dockercfg-xc9c2
    uid: 2dea2385-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMDJORGs1TlNJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTW1Sa1lUWTJaV010TkdGaE9TMHhNV1ZoTFdKaVlUZ3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tRmhZVHBpZFdsc1pHVnlJbjAuUEFiSnJWcEZzWG1vUEdFcjRiTUQ0dkdNTGRfRmZfcHZTZlROeXBVdmtOeTYtYXFWc2Y0VnZPQVo0b2V1Z0l1SlY4MnA3VVNGbnZXMF9kXzVIaDVoZmV0Nk9CRnpEUHBTWFVCU0M3dExKU2dCUkJFMUdDcjBONzNkNVQ3SlYwejRvNGduczhMVnpNbnlVRl9qcVcxX1NMYjZIZWxPSkh2d1dJR0pvS1YxZXR6X29DZThIc1ptOEZHRXlOOFl4bmlIX2FDc0I1ZzY0UHM5UG4yRTVIZHNyaVQ4MGVtRmxxWVd1S1lwNjR3VjFKTFFkWm1QeENoUG9WVXp0bnRTdVB2LXFZcV9rUTFZTG5MMjB6MDBFRXFVRFlsRlY1UEtiTFQwdGJFRktPckszTG5keC1fRk9lVFYwdERKbTJYZjZTbEhyQjB3SnlSUnZZclV1Q1RaMDVsTzJR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 2dda66ec-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: builder-token-64995
    namespace: aaa
    resourceVersion: "40204"
    selfLink: /api/v1/namespaces/aaa/secrets/builder-token-64995
    uid: 2ddfe3da-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWW5WcGJHUmxjaTEwYjJ0bGJpMDJhM2M1YXlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKaWRXbHNaR1Z5SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTW1Sa1lUWTJaV010TkdGaE9TMHhNV1ZoTFdKaVlUZ3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tRmhZVHBpZFdsc1pHVnlJbjAuaDdvQXRiamZBXzZ5SWRUXzhDUzhMZzlEZWxHYWJpVzlMZGIxRjQ4WXZDajdHdE9idG1fZTMwQ0c0bllqcmNveXl6N0cwb3ZCM21YTkpfV01aWTJSbHZkNmdJX2VHdmRGRzlXSXpNc09JT1gyQWtVd1A0LU81b2ZpR0JGSUVnRFc0emFzOFZZc2J5YmswQmNnNkswYVZFa1BRZl90MjlxclFGTktEdGo3eFlNbmhzVmxoOHA1UFp4THpPWmtsdHJDUnBpQ0dzME5qT1kwV3RNTXFCR2tjSml5cWRXVmUydG9LNmtibWtlNWc5MTVlbENwMEtDRUdZSUw3Q3dXUHVxZkU0Y3lJUXZacFRqYjVuYmY4YmQ5SENsVHBMeGhVbU1mek1KZ2lpYTRBVG96ME9aX3hYX0l3RXgwY1hKTzVZVVJ3bHN3VjZHQ2h2ZkRLeWVpTHVxdGln
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 2dda66ec-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: builder-token-6kw9k
    namespace: aaa
    resourceVersion: "40200"
    selfLink: /api/v1/namespaces/aaa/secrets/builder-token-6kw9k
    uid: 2de0ae24-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: 
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 2ddf6e5f-4aa9-11ea-bba8-0ef0e3c74fbe
      openshift.io/token-secret.name: default-token-2hsb9
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYWEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVmYXVsdC10b2tlbi0yaHNiOSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMmRkZjZlNWYtNGFhOS0xMWVhLWJiYTgtMGVmMGUzYzc0ZmJlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFhYTpkZWZhdWx0In0.G_YhPAgjU-SWVpmh1b_9UlwQuJAYREvC8jVdiS1ExKl85_1xbPjJ0DWqYs8ROEn9DOVlbODYtmBArXsW1tC8ssOmB-stYwWMhFv3lmiIquVT7wuMN6rW7Zwaq_qZ0Ux3pJEIiXccRysEuB8VYCSlVmL4PHaK99lyfr69ODgJurc3n9k67rRlXjdg9eBH0DG0xD00IyBpUJyFNXfwzAnTDFLrkzssknIz-X-PqReZBWaHxeDJ33WvtaIwDoSuZXqIS0ZzpHf7as0-fRUBvUuMvFSGRxDpvC9Nxw4y_T7EdxNbhwQA_knc2m1A1ad8vvWYmVVuo4ZCPaOtkFo2Dw45GQ
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: default-dockercfg-qvzd6
    namespace: aaa
    resourceVersion: "40217"
    selfLink: /api/v1/namespaces/aaa/secrets/default-dockercfg-qvzd6
    uid: 2df030c7-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMHlhSE5pT1NJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTW1Sa1pqWmxOV1l0TkdGaE9TMHhNV1ZoTFdKaVlUZ3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tRmhZVHBrWldaaGRXeDBJbjAuR19ZaFBBZ2pVLVNXVnBtaDFiXzlVbHdRdUpBWVJFdkM4alZkaVMxRXhLbDg1XzF4YlBqSjBEV3FZczhST0VuOURPVmxiT0RZdG1CQXJYc1cxdEM4c3NPbUItc3RZd1dNaEZ2M2xtaUlxdVZUN3d1TU42clc3WndhcV9xWjBVeDNwSkVJaVhjY1J5c0V1QjhWWUNTbFZtTDRQSGFLOTlseWZyNjlPRGdKdXJjM245azY3clJsWGpkZzllQkgwREcweEQwMEl5QnBVSnlGTlhmd3pBblRERkxya3pzc2tuSXotWC1QcVJlWkJXYUh4ZURKMzNXdnRhSXdEb1N1WlhxSVMwWnpwSGY3YXMwLWZSVUJ2VXVNdkZTR1J4RHB2QzlOeHc0eV9UN0VkeE5iaHdRQV9rbmMybTFBMWFkOHZ2V1ltVlZ1bzRaQ1BhT3RrRm8yRHc0NUdR
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 2ddf6e5f-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: default-token-2hsb9
    namespace: aaa
    resourceVersion: "40212"
    selfLink: /api/v1/namespaces/aaa/secrets/default-token-2hsb9
    uid: 2de47f1d-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWbVlYVnNkQzEwYjJ0bGJpMXVkbXh3ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKa1pXWmhkV3gwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWRXbGtJam9pTW1Sa1pqWmxOV1l0TkdGaE9TMHhNV1ZoTFdKaVlUZ3RNR1ZtTUdVell6YzBabUpsSWl3aWMzVmlJam9pYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1ME9tRmhZVHBrWldaaGRXeDBJbjAuakdWZmJPMUx2ZmlYVnlWbnNoWW85dUVRZ0xCVHh1UzVkQTB4VUh0LUtTLWg2QXBUeGJVZnUtNF90a3h2TWNNUTExQWxXbWFFVlZDUkxuWGxYZUVnQmpvcDZTdWtWZS1lUXdfU28zZUFYdm0ta0lOV0pGY1A3VUdzM0MySmZoMmI5alpPbV9LMktIQkJzWTFlUXRhSWgzNXY0OUluRGo2dktDMXU2ckJYZ3c2Y094cWptckRWQXNkdEVCUV9yd0ExTENtY1pDZVNhZ0JKSXk2c1o4cXZVR1ZZMVRfUDU3NFZGWlVSdTlyWldPdHU3ODNSNk5XVHBaV1IyaHZHdkg1RDVDOEQtSEJLbXhUUmZqTXhtVks0TER4N2l0VTdQU2QteF8tLUVmYWZ4UGk1OE90amk5SUtKY3FlaHl5RTlvcU01bHd4OUVFUnVBZ01sOWQzY25yM1d3
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 2ddf6e5f-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: default-token-nvlpt
    namespace: aaa
    resourceVersion: "40214"
    selfLink: /api/v1/namespaces/aaa/secrets/default-token-nvlpt
    uid: 2dec6186-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: eyIxNzIuMzAuNDkuMjMxOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRkR3gzYTJ3aUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJeVpHUmxNVGhpT1MwMFlXRTVMVEV4WldFdFltSmhPQzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZZV0ZoT21SbGNHeHZlV1Z5SW4wLlZ4Ump3NWdwdmNMdkMxaUlieWdVT2RpckUzcmgxTlJVaFdmb1ZuSl9FbGphVmhBZ0RrRDQtVUY0NURKVlR5bEN0Y0V6N0ZfdXl4dEdnV0hXa3cwcUx3dXFuUVlMYUt0REZqMjl5RXE5UUxkcnJYTTk2RjJTU3h3MEVLQVAxVUFWaEtiTmhLRzhYU3BuRjc1TDhPQVk4WXJkc1lyVzUyeG5WZThtSWxPTVZQa0duYjV4REJDWkQ3SXE4dnBfWGFCQi1POUJrLXdKaGZkNHZtcE1SOXNCWWFjZDFLUWViSlUxOUVuMnIzSjZYdHZBNzBBQUpqWlBMeGFkbmZMd3JCcWNXbU9QTEZjQ2lKa01mLXVob3hoZkNCOVNDOUFPYVZmMmhnYk1odUhfdWpQLUo0dDZpLXRDd2RDczU4TTJicmgwTFNiVjdPTHM5MGNBd18wY3pySlBPUSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xwU2prdVpYbEtjR016VFdsUGFVcHlaRmRLYkdOdE5XeGtSMVo2VEROT2JHTnVXbkJaTWxab1dUSk9kbVJYTlRCSmFYZHBZVE5XYVZwWVNuVmFXRkpzWTNrMWNHSjVPWHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRU01ZFZsWE1XeGpNMEpvV1RKVmFVOXBTbWhaVjBWcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14Wk0wcHNaRU0xZFZsWE1XeEphbTlwV2tkV2QySkhPVFZhV0VsMFpFYzVjbHBYTkhSa1IzZ3pZVEozYVV4RFNuSmtWMHBzWTIwMWJHUkhWbnBNYld4MlRETk9iR051V25CWk1sWm9XVEpPZG1SWE5UQk1NMDVzWTI1YWNGa3lWWFJaVjA1cVlqTldkV1JETlhWWlZ6RnNTV3B2YVZwSFZuZGlSemsxV2xoSmFVeERTbkprVjBwc1kyMDFiR1JIVm5wTWJXeDJURE5PYkdOdVduQlpNbFpvV1RKT2RtUlhOVEJNTTA1c1kyNWFjRmt5VlhSWlYwNXFZak5XZFdSRE5URmhWMUZwVDJsSmVWcEhVbXhOVkdocFQxTXdNRmxYUlRWTVZFVjRXbGRGZEZsdFNtaFBRekIzV2xkWmQxcFVUbXBPZWxKdFdXMVZhVXhEU25wa1YwbHBUMmxLZW1WWVRqQmFWekEyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVRaWlYwWm9UMjFTYkdOSGVIWmxWMVo1U1c0d0xsWjRVbXAzTldkd2RtTk1ka014YVVsaWVXZFZUMlJwY2tVemNtZ3hUbEpWYUZkbWIxWnVTbDlGYkdwaFZtaEJaMFJyUkRRdFZVWTBOVVJLVmxSNWJFTjBZMFY2TjBaZmRYbDRkRWRuVjBoWGEzY3djVXgzZFhGdVVWbE1ZVXQwUkVacU1qbDVSWEU1VVV4a2NuSllUVGsyUmpKVFUzaDNNRVZMUVZBeFZVRldhRXRpVG1oTFJ6aFlVM0J1UmpjMVREaFBRVms0V1hKa2MxbHlWelV5ZUc1V1pUaHRTV3hQVFZaUWEwZHVZalY0UkVKRFdrUTNTWEU0ZG5CZldHRkNRaTFQT1VKckxYZEthR1prTkhadGNFMVNPWE5DV1dGalpERkxVV1ZpU2xVeE9VVnVNbkl6U2paWWRIWkJOekJCUVVwcVdsQk1lR0ZrYm1aTWQzSkNjV05YYlU5UVRFWmpRMmxLYTAxbUxYVm9iM2hvWmtOQ09WTkRPVUZQWVZabU1taG5ZazFvZFVoZmRXcFFMVW8wZERacExYUkRkMlJEY3pVNFRUSmljbWd3VEZOaVZqZFBUSE01TUdOQmQxOHdZM3B5U2xCUFVRPT0ifSwiaW1hZ2UtcmVnaXN0cnkub3BlbnNoaWZ0LWltYWdlLXJlZ2lzdHJ5LnN2Yy5jbHVzdGVyLmxvY2FsOjUwMDAiOnsidXNlcm5hbWUiOiJzZXJ2aWNlYWNjb3VudCIsInBhc3N3b3JkIjoiZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRkR3gzYTJ3aUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJeVpHUmxNVGhpT1MwMFlXRTVMVEV4WldFdFltSmhPQzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZZV0ZoT21SbGNHeHZlV1Z5SW4wLlZ4Ump3NWdwdmNMdkMxaUlieWdVT2RpckUzcmgxTlJVaFdmb1ZuSl9FbGphVmhBZ0RrRDQtVUY0NURKVlR5bEN0Y0V6N0ZfdXl4dEdnV0hXa3cwcUx3dXFuUVlMYUt0REZqMjl5RXE5UUxkcnJYTTk2RjJTU3h3MEVLQVAxVUFWaEtiTmhLRzhYU3BuRjc1TDhPQVk4WXJkc1lyVzUyeG5WZThtSWxPTVZQa0duYjV4REJDWkQ3SXE4dnBfWGFCQi1POUJrLXdKaGZkNHZtcE1SOXNCWWFjZDFLUWViSlUxOUVuMnIzSjZYdHZBNzBBQUpqWlBMeGFkbmZMd3JCcWNXbU9QTEZjQ2lKa01mLXVob3hoZkNCOVNDOUFPYVZmMmhnYk1odUhfdWpQLUo0dDZpLXRDd2RDczU4TTJicmgwTFNiVjdPTHM5MGNBd18wY3pySlBPUSIsImVtYWlsIjoic2VydmljZWFjY291bnRAZXhhbXBsZS5vcmciLCJhdXRoIjoiYzJWeWRtbGpaV0ZqWTI5MWJuUTZaWGxLYUdKSFkybFBhVXBUVlhwSk1VNXBTWE5KYlhSd1drTkpOa2xwU2prdVpYbEtjR016VFdsUGFVcHlaRmRLYkdOdE5XeGtSMVo2VEROT2JHTnVXbkJaTWxab1dUSk9kbVJYTlRCSmFYZHBZVE5XYVZwWVNuVmFXRkpzWTNrMWNHSjVPWHBhV0VveVlWZE9iRmxYVG1waU0xWjFaRU01ZFZsWE1XeGpNMEpvV1RKVmFVOXBTbWhaVjBWcFRFTktjbVJYU214amJUVnNaRWRXZWt4dGJIWk1NMDVzWTI1YWNGa3lWbWhaTWs1MlpGYzFNRXd6VG14Wk0wcHNaRU0xZFZsWE1XeEphbTlwV2tkV2QySkhPVFZhV0VsMFpFYzVjbHBYTkhSa1IzZ3pZVEozYVV4RFNuSmtWMHBzWTIwMWJHUkhWbnBNYld4MlRETk9iR051V25CWk1sWm9XVEpPZG1SWE5UQk1NMDVzWTI1YWNGa3lWWFJaVjA1cVlqTldkV1JETlhWWlZ6RnNTV3B2YVZwSFZuZGlSemsxV2xoSmFVeERTbkprVjBwc1kyMDFiR1JIVm5wTWJXeDJURE5PYkdOdVduQlpNbFpvV1RKT2RtUlhOVEJNTTA1c1kyNWFjRmt5VlhSWlYwNXFZak5XZFdSRE5URmhWMUZwVDJsSmVWcEhVbXhOVkdocFQxTXdNRmxYUlRWTVZFVjRXbGRGZEZsdFNtaFBRekIzV2xkWmQxcFVUbXBPZWxKdFdXMVZhVXhEU25wa1YwbHBUMmxLZW1WWVRqQmFWekEyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVRaWlYwWm9UMjFTYkdOSGVIWmxWMVo1U1c0d0xsWjRVbXAzTldkd2RtTk1ka014YVVsaWVXZFZUMlJwY2tVemNtZ3hUbEpWYUZkbWIxWnVTbDlGYkdwaFZtaEJaMFJyUkRRdFZVWTBOVVJLVmxSNWJFTjBZMFY2TjBaZmRYbDRkRWRuVjBoWGEzY3djVXgzZFhGdVVWbE1ZVXQwUkVacU1qbDVSWEU1VVV4a2NuSllUVGsyUmpKVFUzaDNNRVZMUVZBeFZVRldhRXRpVG1oTFJ6aFlVM0J1UmpjMVREaFBRVms0V1hKa2MxbHlWelV5ZUc1V1pUaHRTV3hQVFZaUWEwZHVZalY0UkVKRFdrUTNTWEU0ZG5CZldHRkNRaTFQT1VKckxYZEthR1prTkhadGNFMVNPWE5DV1dGalpERkxVV1ZpU2xVeE9VVnVNbkl6U2paWWRIWkJOekJCUVVwcVdsQk1lR0ZrYm1aTWQzSkNjV05YYlU5UVRFWmpRMmxLYTAxbUxYVm9iM2hvWmtOQ09WTkRPVUZQWVZabU1taG5ZazFvZFVoZmRXcFFMVW8wZERacExYUkRkMlJEY3pVNFRUSmljbWd3VEZOaVZqZFBUSE01TUdOQmQxOHdZM3B5U2xCUFVRPT0ifSwiaW1hZ2UtcmVnaXN0cnkub3BlbnNoaWZ0LWltYWdlLXJlZ2lzdHJ5LnN2Yzo1MDAwIjp7InVzZXJuYW1lIjoic2VydmljZWFjY291bnQiLCJwYXNzd29yZCI6ImV5SmhiR2NpT2lKU1V6STFOaUlzSW10cFpDSTZJaUo5LmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpoWVdFaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sWTNKbGRDNXVZVzFsSWpvaVpHVndiRzk1WlhJdGRHOXJaVzR0ZEd4M2Eyd2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2laR1Z3Ykc5NVpYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSXlaR1JsTVRoaU9TMDBZV0U1TFRFeFpXRXRZbUpoT0Mwd1pXWXdaVE5qTnpSbVltVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2WVdGaE9tUmxjR3h2ZVdWeUluMC5WeFJqdzVncHZjTHZDMWlJYnlnVU9kaXJFM3JoMU5SVWhXZm9WbkpfRWxqYVZoQWdEa0Q0LVVGNDVESlZUeWxDdGNFejdGX3V5eHRHZ1dIV2t3MHFMd3VxblFZTGFLdERGajI5eUVxOVFMZHJyWE05NkYyU1N4dzBFS0FQMVVBVmhLYk5oS0c4WFNwbkY3NUw4T0FZOFlyZHNZclc1MnhuVmU4bUlsT01WUGtHbmI1eERCQ1pEN0lxOHZwX1hhQkItTzlCay13SmhmZDR2bXBNUjlzQllhY2QxS1FlYkpVMTlFbjJyM0o2WHR2QTcwQUFKalpQTHhhZG5mTHdyQnFjV21PUExGY0NpSmtNZi11aG94aGZDQjlTQzlBT2FWZjJoZ2JNaHVIX3VqUC1KNHQ2aS10Q3dkQ3M1OE0yYnJoMExTYlY3T0xzOTBjQXdfMGN6ckpQT1EiLCJlbWFpbCI6InNlcnZpY2VhY2NvdW50QGV4YW1wbGUub3JnIiwiYXV0aCI6ImMyVnlkbWxqWldGalkyOTFiblE2WlhsS2FHSkhZMmxQYVVwVFZYcEpNVTVwU1hOSmJYUndXa05KTmtscFNqa3VaWGxLY0dNelRXbFBhVXB5WkZkS2JHTnROV3hrUjFaNlRETk9iR051V25CWk1sWm9XVEpPZG1SWE5UQkphWGRwWVROV2FWcFlTblZhV0ZKc1kzazFjR0o1T1hwYVdFb3lZVmRPYkZsWFRtcGlNMVoxWkVNNWRWbFhNV3hqTTBKb1dUSlZhVTlwU21oWlYwVnBURU5LY21SWFNteGpiVFZzWkVkV2VreHRiSFpNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUV3elRteFpNMHBzWkVNMWRWbFhNV3hKYW05cFdrZFdkMkpIT1RWYVdFbDBaRWM1Y2xwWE5IUmtSM2d6WVRKM2FVeERTbkprVjBwc1kyMDFiR1JIVm5wTWJXeDJURE5PYkdOdVduQlpNbFpvV1RKT2RtUlhOVEJNTTA1c1kyNWFjRmt5VlhSWlYwNXFZak5XZFdSRE5YVlpWekZzU1dwdmFWcEhWbmRpUnprMVdsaEphVXhEU25Ka1YwcHNZMjAxYkdSSFZucE1iV3gyVEROT2JHTnVXbkJaTWxab1dUSk9kbVJYTlRCTU0wNXNZMjVhY0ZreVZYUlpWMDVxWWpOV2RXUkROVEZoVjFGcFQybEplVnBIVW14TlZHaHBUMU13TUZsWFJUVk1WRVY0V2xkRmRGbHRTbWhQUXpCM1dsZFpkMXBVVG1wT2VsSnRXVzFWYVV4RFNucGtWMGxwVDJsS2VtVllUakJhVnpBMll6SldlV1J0YkdwYVYwWnFXVEk1TVdKdVVUWlpWMFpvVDIxU2JHTkhlSFpsVjFaNVNXNHdMbFo0VW1wM05XZHdkbU5NZGtNeGFVbGllV2RWVDJScGNrVXpjbWd4VGxKVmFGZG1iMVp1U2w5RmJHcGhWbWhCWjBSclJEUXRWVVkwTlVSS1ZsUjViRU4wWTBWNk4wWmZkWGw0ZEVkblYwaFhhM2N3Y1V4M2RYRnVVVmxNWVV0MFJFWnFNamw1UlhFNVVVeGtjbkpZVFRrMlJqSlRVM2gzTUVWTFFWQXhWVUZXYUV0aVRtaExSemhZVTNCdVJqYzFURGhQUVZrNFdYSmtjMWx5VnpVeWVHNVdaVGh0U1d4UFRWWlFhMGR1WWpWNFJFSkRXa1EzU1hFNGRuQmZXR0ZDUWkxUE9VSnJMWGRLYUdaa05IWnRjRTFTT1hOQ1dXRmpaREZMVVdWaVNsVXhPVVZ1TW5JelNqWllkSFpCTnpCQlFVcHFXbEJNZUdGa2JtWk1kM0pDY1dOWGJVOVFURVpqUTJsS2EwMW1MWFZvYjNob1prTkNPVk5ET1VGUFlWWm1NbWhuWWsxb2RVaGZkV3BRTFVvMGREWnBMWFJEZDJSRGN6VTRUVEppY21nd1RGTmlWamRQVEhNNU1HTkJkMTh3WTNweVNsQlBVUT09In19
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 2dde18b9-4aa9-11ea-bba8-0ef0e3c74fbe
      openshift.io/token-secret.name: deployer-token-tlwkl
      openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhYWEiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoiZGVwbG95ZXItdG9rZW4tdGx3a2wiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVwbG95ZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyZGRlMThiOS00YWE5LTExZWEtYmJhOC0wZWYwZTNjNzRmYmUiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6YWFhOmRlcGxveWVyIn0.VxRjw5gpvcLvC1iIbygUOdirE3rh1NRUhWfoVnJ_EljaVhAgDkD4-UF45DJVTylCtcEz7F_uyxtGgWHWkw0qLwuqnQYLaKtDFj29yEq9QLdrrXM96F2SSxw0EKAP1UAVhKbNhKG8XSpnF75L8OAY8YrdsYrW52xnVe8mIlOMVPkGnb5xDBCZD7Iq8vp_XaBB-O9Bk-wJhfd4vmpMR9sBYacd1KQebJU19En2r3J6XtvA70AAJjZPLxadnfLwrBqcWmOPLFcCiJkMf-uhoxhfCB9SC9AOaVf2hgbMhuH_ujP-J4t6i-tCwdCs58M2brh0LSbV7OLs90cAw_0czrJPOQ
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: deployer-dockercfg-fmxbn
    namespace: aaa
    resourceVersion: "40213"
    selfLink: /api/v1/namespaces/aaa/secrets/deployer-dockercfg-fmxbn
    uid: 2ded3240-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRaRFo0ZW1RaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJeVpHUmxNVGhpT1MwMFlXRTVMVEV4WldFdFltSmhPQzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZZV0ZoT21SbGNHeHZlV1Z5SW4wLkx0dkV0cTJLek5QbXlfMkJiOVduY2RoeEhRWWdvalJfVnhRSXJBU0NWY1UzbzJkclFuakFlYnRaTUpxTF8yUVpkUlFlS21Ud3JwWUdmV2pmOXV5bjJBaHBXTTM5X3dQMXc5RDRLNHdobUkwY05ucFplZVJjUjJPREpHeUQwUUlYVi1sTlNnUE5Id284VDk3ZVZjeURTelRaTkYwbnV2N0xDOWUwLUtZUnliSUdiY1I3VUtmOXppekd4TEVSWDgxRXZyQm5wU0E0aDFuQ2VicjNSaV9PZVV2WlcweF9Fb3l6TzZWZm5zaEJwaGNsMjZ1VjJ4Y25SU2NfTVVKZXotbG9HbVJaX3hRRTRhYzdOcjVlbjEyYnh5X2JzQXhST1J6NkZBTUotZnExTzZaVHVUUGNZcDdWZHVxMVZFdWNoaml3cEh5QmpuQ0VjcXhaY2E0UGZmaVFQQQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 2dde18b9-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: deployer-token-d6xzd
    namespace: aaa
    resourceVersion: "40205"
    selfLink: /api/v1/namespaces/aaa/secrets/deployer-token-d6xzd
    uid: 2de5bfdc-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: YWFh
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZUxuZkdkVERvc2d3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd01UTXdNRE0wTVRJMVdoY05NekF3TVRJM01ETTBNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTE5oNjFXZ0JKN2lCZG5JWVZhRzRCbStWMk9zRVIwSQpYaDFVOEpiME5uWXpKa052b2pUR1hZbVA0aWZGeXlKVklwZjhIb2NwSSt3M3RjTjFQMWo2ait4RlBhclhwS2VRCmErZ201UEcvT0VDR3N5YUdqeis5QnVnd2g1MzRwNTFWSitpUFRkK1l1WmNhcEsvbitTdk1KQXhSU0lBT25Ia2IKZDdlR01hNzRsUFFGazlITjZxWExlWTBUaGpXUG5BZnhqVFFLT2J2UktjM1YzbzNsd1A3czRJRTZXdnE4NnZGTQpuRVRHM2ptc3ZSZ2RYYXhwa0VhWWNDZXJpOTBHK3p4eDdhbUt2ZVVubFJMN2cwdGlUd2EySE5zTG9kMU5odDNXClIxdXVwT1loSFFUZVFrbldBbG5EZTl3eWI2UFIyUndHdEl6eEE2UlU5OVZjcDJGUEpVMWsrb1VDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY4WQp3anpkS3ZRUUhid1h1ZWFZdm1mTXRjc3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJtSmhxRDBnallMc0FaCkJZRWZhenI2NnYrV2MrQkdrRHM3SERyRmFHYlZxcDJJeTNCZmFCRjdWTHdVUXhLNHdNWEtMcWdndmJNUXBlb3cKckY0NFk0T3RnTEFxZFBOMVhCSHNOcVZQTG9WNmxlMnJLYUloRndodEtYUHNEL3R6YTZabVlNQ0tZUlJYSGxEUgoxbmZqNFRoUnhTSmlCNXBoVkdaUmtCaVlVTkxWQVY3dzF6Sm1WbDdMTnJTdzM1SlRCcXpzd2s3cDdITzhYL2E1CjQ1TEV0dVJENHIrNU16Rzl3RmtYVGNrb2c0RmJzbTROOVI1TmtReGRMNVBTZmtIL2F0b3JYNyt2ZFNwVmpJWDUKTnNxbWRQV1dtNlVyenJPVEpGRHI5MGtlTkxsRGMwaFRDTEpzd3gyT0pHWEJLU2tINXRybnY0M2N5NUVmbklLbQpYbDhBUTlQeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU5qem5GSGtaNmxrd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01ERXpNREF6TkRFeU5Gb1hEVE13TURFeU56QXpOREV5TkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwNDBtQXNWTlRqbmQKM0hqa1NCdkdkakJXVzZKYmNvUVFrQ2JTdjREZWlFK2JVcHhZWUt4dTJ2Vlhya1FldTY3SFZLTUk1U1ZSN0RVZQpZTk1QNzZzQUtzMHBzWmNzdTVpUkEwa2N1RW1nMjdLZU1CVDRzMmYvMlN3aDZVTlJWV1RsaTQwSG5MOVVFNGtGCnZzV3VlbDkyQitCQjdRRHRmZ0VLMWg0NWF4TVFtY3RjamFLMUZNQ0JNZTJSUXRxY1EyRlVZWXQ1eXFWazBUSlcKaEp6SzgrRVdsbDNobDRWTmFJazNKS2hudHdwWDJXWTV6NS9DOXJnOUZnUTJJZkwwNWUwNCtSVm90N2Z5T0RBMwowNTJaZ1F6WllhcE8xeVVSM2k4ZFdIbVFscEVtRkE1WWVJc0o5TS9ETm9WVWdaK0hSaGtLUkJUTFBtL2JVWG13Cm85NDVMQnVocFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWZYR0tpS1VWL0xuZWthazBUYkJPcUcrQ1dna3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF0MHF0dlpvU1cxQUQ5M1hXU1JqTEZrSE1lUWJuQytqRmZGTi9iMWlBaFNrcHNNWG9RSDR0Y0Z0WDZhClAraENjZkZrSDNZUUJMcnpTSTJsVVBlMlpXbTFXQ0xZRUJ0ZCtKU0ttNzBaTFlyTXBBS1Q1VktsN3BubCtnT1UKQ2g4TGw0Ukk0dVE2UGk3SkFpd3pQTGdnR2xzeStEZWJsWmNyQmdjdDJUNTZIeERORFdpYnJSU1B3bExZbktLNQpxWmx4U1NySVJqUXhVb2VhY2hueVZHREJ1M3AzMGhWSkxQRUdXV1REQ3JucjUvd0JkMXErdVFuK0NURVRKTkFLCm5KREVPeUEvYWxyQmw2SUF3MnY0aGJoL0o5TmVPZWdGOWZzRXEvWUFoV0h5YWo1cUdCQUx0R1RkV1RxYzYzSncKRExBVHBYOVVTemJ0NTYzUDkzUDZhRWFRd3BVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUtoSUtkakpic3Fnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURFek1EQXpOREV5TkZvWERUTXdNREV5TnpBek5ERXlORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXBZQUZ4amRndDRGb0FBT2VWNDQxQ3JvZXJvQndNaHJCQlV6alovS3FlandIa3RzSmI2c1FhU2NxS1ZPZwp0YUd0R3hYVXBJQ2RGc2ovZzQvT211NzYwU0t6U2FpT3FVK05TTHk0cVQ0UUtxb01LVDgwbVdBRUc3VVFwMk1xCjl3ZnJjTkVhWFViSTVQWlQ4dnI4akpETmozVTc3SkxrT0lHbGphbi9LSGhDamc2Y1NRK202VHAyUlF5bVhTZlcKZTNHR1ljQVl4YnYvUlN5YWV3SDlLaStqcnZWVjZMUVdkZDlSQkdOL3NWdEV1VkNXdUFjeUt0b3A4UlB2U0gxMQptZU84Z3k0RDNvQUdqL3NIRHMwVTRPdHBNaTlyUGxLc0llUnNwZitQR2NrS0dURHBUL3AwUmw0b3hLY0w5YmhVCldZME9NSWQvWTN2SmluUHlXb1hGLzA3VG9RSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVU5SUJLdnphNFg0YjZMeDFXYlZNYXErMHFadmt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJVnQ0M21aTzBBZlJ3UHR0YWVpRWZhTWgrb2ZCR01jb0RlajZORTNBay94ClpsTnd5R1pERlJFVGVlcmZZcnQ0dTRlRm5RNnJGZXJzWDk5VXBMTUQ3cVBRa3BMN25vWFJQU2tQZXQzRDJNZEwKLzJaeEhDSnVpNE9BTU80Y2hFWTY0dWFtWXFWVEtpK0wyeUxJRDVCNzRyY0V2a0J4azNyclc4UFdhcE9BekVFYgp5YVJRUU03aHdwMDc2c2VaVDFZSnY1b29GcnRQUXFLOGx1WG1IaGFhdkoyNkYwMUxDcWt2cWUvei9jMzQrcWx0CkR2MEQxa201TkVTVWpNblZBM2RHK3Rkb0tMeVpKVzVjWit4YUE1a3A3K29pRDFEdEdEYXFYbDNRK2xzcXRzL2MKMXRoa1c2dDZ6bGR6aWlCNmtYcW4rK1hUS2Qwd1dNSENLL2JZd3pjUTk1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdUQ0NBZFdnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFMU9EQXpOVGMzTnpFd0hoY05NakF3TVRNd01EUXhOakV5V2hjTk1qSXdNVEk1Ck1EUXhOakV6V2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTFPREF6TlRjM056RXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzBHVzJhOWlPYWJuSWVZZXMxVnNZZgpkV0J5SEk4K3NlODFsK3ByY3J2b3VNd3ZVbjhJZCsvdklOS0R5V3l0WTZnOUJiazlERy9NU0JyNG9WSWd5YlQvCkZiU3p3aVorTGtOK0NRbXN2SkRZZ3IrSklZZzd3RXY1WDZZcnpIeVAwOEtPdkZRSStDSmhkZDVmTVYycjN4VEIKaUQzMFRKek4xOWIyQUYvUG5SYnJ0dFBwbFdCR3JnU3dDbm5MUllzUUFsQVVQWkpYUWxZeU9ZamlRMllKOHhBYQpKbElPdzdFWHZNd3R6T0Z0bk9uNUZMOGJVOTZ4dmNIeENvL211TEpyWUVsWENJWWpKK0EzNnhHWm1HMUFwaWhiCk1zalY5bU1sTGhJdDgveFg0cmx1d1VEU0ZnK25rb0swZ25JMFZkbXZzTXdHZjZnT2NUNWFBckwzT0ptZ01ydk4KQWdNQkFBR2pKakFrTUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnRySHhzSTlLVVkrblkzQWVDY0ZsUkt0R1p1V01FWkZhNTdlS3BlN04rCmIwOWNkTkxpbTFtblZjU0o5YTkvT3dvaktGZDhZSjRHeENoa3VuaElVMFNGMURXUXgvZGlQQU9Ja2tmRWovYkQKSDNQWHlRRFdFcFUwK1lHazVnWXVaUkdIeDNjMmJVU1pCQ0djQlFBT1BmU2M3VUpmb1pRNXQ5R3JuNFlGV0dEUApsbWc3L2N6dE4wcmZUdWYrS1dLalhpajl6Y01ySThjYWk1Kyt4ZUMxa1d3WWYyOGsvalVnNDNmaTdNUjh1Y2hQCjF0aDVzUCtCcnp4RW9vV2tQRzhMZzJsY2R1Zjg1ZVcreHNremZRTkV5MkU2aXpubHlXYWJuUXBOVVk3S0w1WG8KV2UxaEQzL2FEYm1DaG5VdnYrVDVwZ0ZIb1hMSHJkTXoydGJEcW5yQXI2eEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDakNDQWZLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREEyTVRRd01nWURWUVFEREN0dmNHVnUKYzJocFpuUXRjMlZ5ZG1salpTMXpaWEoyYVc1bkxYTnBaMjVsY2tBeE5UZ3dNelUzTWprMU1CNFhEVEl3TURFegpNREEwTURneE5Gb1hEVEl4TURFeU9UQTBNRGd4TlZvd05qRTBNRElHQTFVRUF3d3JiM0JsYm5Ob2FXWjBMWE5sCmNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFU0TURNMU56STVOVENDQVNJd0RRWUpLb1pJaHZjTkFRRUIKQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFlvRnZyT3VsZkxDR1FNTmdFUUhIOThOb2ozNit6UHJubDNmaW5EQlVNNwp6WU5taE9sQkltZUFuRFJHaWhCTmo0SWtvajJhaWg2dXBkMFRaeElFQWhjMElTd3V1NHdQOTRFcTVzcHMxZHpiCm1QRU9xUXdsczFEY3RSNEFDanUrdGV2RkgxYUJZNVVOVlIzZFlkcXhTWlQ3RWI5N2ZJNUtOSW8yQmw5ZENoV3YKeXJBK1JKM0VhZzVLNnoxVlFiL1FXZllEZTRrQXdobHp2cmRsWHEwcUJWYURTUkE2SmIrUTRJK3NnNEt2alJuZwpPQkhtaTdTc3VjWnFRQWw2NTNtUlllZmI4ckUxbTBuKzFISmVMbHFNUTlSN0l0bTFxb0RUaHdVWVk4a1ZCenZZCjNlUTVuNlhpNUp0Y3RiaXFOb0hNM2hQVHBiem5UOHM5OFdCWjBvSHdicUVDQXdFQUFhTWpNQ0V3RGdZRFZSMFAKQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUlNTgphdGpianQzTDFZN3FNK2ZGMkg5TTBHbWJoQXBVamN6bGE1dGMrNllzTHhnS0tXeXhCQncyMXBiRnZXejQ0R1hWClk3azB0Sk1lejFGVG4vUWdQK3JvZTN4VndnSXZoeHRKWmpYcWUvcXcxK05TOERPVkJVaHVib2IyRjBxU0J4aVIKT3pPZDBZY2Y2OWJHcTM1b0kyVlpEd0c2L0lhMGFvUWpkakhKbFVBeEdiTnl5N3N4bXpwRjN6QlNzTmVtckpIUwp0QVZWYTBtcEVIcFo4NFBSRVlkTmdQT3ZSUkduZXJNOVpXVmViL1lBUmlJNCt6bmxObkY5ZHcrWklzaHhrNFdWCktJekdVcXdwQ0JtcjdrSU1SMU1oeHJpSHpHaWVSalg2cnUzYjRGd2J2VkJyWThLcGxiY2YvWlRGK0hpZG02OS8KNXJ1STdpOG15TXZyaEVhcXdJWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmhZV0VpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxZM0psZEM1dVlXMWxJam9pWkdWd2JHOTVaWEl0ZEc5clpXNHRkR3gzYTJ3aUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVpHVndiRzk1WlhJaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNTFhV1FpT2lJeVpHUmxNVGhpT1MwMFlXRTVMVEV4WldFdFltSmhPQzB3WldZd1pUTmpOelJtWW1VaUxDSnpkV0lpT2lKemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUTZZV0ZoT21SbGNHeHZlV1Z5SW4wLlZ4Ump3NWdwdmNMdkMxaUlieWdVT2RpckUzcmgxTlJVaFdmb1ZuSl9FbGphVmhBZ0RrRDQtVUY0NURKVlR5bEN0Y0V6N0ZfdXl4dEdnV0hXa3cwcUx3dXFuUVlMYUt0REZqMjl5RXE5UUxkcnJYTTk2RjJTU3h3MEVLQVAxVUFWaEtiTmhLRzhYU3BuRjc1TDhPQVk4WXJkc1lyVzUyeG5WZThtSWxPTVZQa0duYjV4REJDWkQ3SXE4dnBfWGFCQi1POUJrLXdKaGZkNHZtcE1SOXNCWWFjZDFLUWViSlUxOUVuMnIzSjZYdHZBNzBBQUpqWlBMeGFkbmZMd3JCcWNXbU9QTEZjQ2lKa01mLXVob3hoZkNCOVNDOUFPYVZmMmhnYk1odUhfdWpQLUo0dDZpLXRDd2RDczU4TTJicmgwTFNiVjdPTHM5MGNBd18wY3pySlBPUQ==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 2dde18b9-4aa9-11ea-bba8-0ef0e3c74fbe
    creationTimestamp: "2020-02-08T19:28:26Z"
    name: deployer-token-tlwkl
    namespace: aaa
    resourceVersion: "40206"
    selfLink: /api/v1/namespaces/aaa/secrets/deployer-token-tlwkl
    uid: 2de17fd8-4aa9-11ea-bba8-0ef0e3c74fbe
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    APPLICATION_NAME: ZWFwLWFwcA==
    AUTO_DEPLOY_EXPLODED: ZmFsc2U=
    CONTEXT_DIR: a2l0Y2hlbnNpbms=
    IMAGE_STREAM_NAMESPACE: b3BlbnNoaWZ0
    MAVEN_ARGS_APPEND: LURjb20ucmVkaGF0LnhwYWFzLnJlcG8uamJvc3Nvcmc=
    MEMORY_LIMIT: MUdp
    SOURCE_REPOSITORY_REF: b3BlbnNoaWZ0
    SOURCE_REPOSITORY_URL: aHR0cHM6Ly9naXRodWIuY29tL2pib3NzLWRldmVsb3Blci9qYm9zcy1lYXAtcXVpY2tzdGFydHMuZ2l0
  kind: Secret
  metadata:
    creationTimestamp: "2020-02-08T19:32:41Z"
    generateName: eap72-basic-s2i-parameters-
    name: eap72-basic-s2i-parameters-v7rrr
    namespace: aaa
    resourceVersion: "40924"
    selfLink: /api/v1/namespaces/aaa/secrets/eap72-basic-s2i-parameters-v7rrr
    uid: c5ccbb81-4aa9-11ea-bba8-0ef0e3c74fbe
  type: Opaque
- apiVersion: v1
  data:
    COMPONENT_WILDFLY_DCDJ_HOST: d2lsZGZseS1kY2RqLWFwcA==
    COMPONENT_WILDFLY_DCDJ_PORT: ODA4MA==
  kind: Secret
  metadata:
    annotations:
      app.kubernetes.io/component-source-type: git
      app.openshift.io/vcs-uri: https://github.com/openshift/openshift-jee-sample.git
      component-port: "8080"
    creationTimestamp: "2020-02-09T01:32:25Z"
    labels:
      app: app
      app.kubernetes.io/instance: wildfly-dcdj
      app.kubernetes.io/managed-by: odo
      app.kubernetes.io/managed-by-version: v1.1.0
      app.kubernetes.io/name: wildfly
      app.kubernetes.io/part-of: app
      app.openshift.io/runtime-version: latest
    name: wildfly-dcdj-app-8080
    namespace: aaa
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      name: wildfly-dcdj-app
      uid: 06d8c8e8-4adc-11ea-b90b-0a580a8000ae
    resourceVersion: "100465"
    selfLink: /api/v1/namespaces/aaa/secrets/wildfly-dcdj-app-8080
    uid: 06e1f4b6-4adc-11ea-879b-0ef0e3c74fbe
  type: Opaque
- apiVersion: v1
  data:
    COMPONENT_WILDFLY_DCDJ_HOST: d2lsZGZseS1kY2RqLWFwcA==
    COMPONENT_WILDFLY_DCDJ_PORT: ODc3OA==
  kind: Secret
  metadata:
    annotations:
      app.kubernetes.io/component-source-type: git
      app.openshift.io/vcs-uri: https://github.com/openshift/openshift-jee-sample.git
      component-port: "8778"
    creationTimestamp: "2020-02-09T01:32:25Z"
    labels:
      app: app
      app.kubernetes.io/instance: wildfly-dcdj
      app.kubernetes.io/managed-by: odo
      app.kubernetes.io/managed-by-version: v1.1.0
      app.kubernetes.io/name: wildfly
      app.kubernetes.io/part-of: app
      app.openshift.io/runtime-version: latest
    name: wildfly-dcdj-app-8778
    namespace: aaa
    ownerReferences:
    - apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      name: wildfly-dcdj-app
      uid: 06d8c8e8-4adc-11ea-b90b-0a580a8000ae
    resourceVersion: "100463"
    selfLink: /api/v1/namespaces/aaa/secrets/wildfly-dcdj-app-8778
    uid: 06dfa855-4adc-11ea-879b-0ef0e3c74fbe
  type: Opaque
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
